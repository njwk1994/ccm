
package ccm.server.ws.p6.project;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import javax.xml.namespace.QName;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.5.3
 * 2022-09-14T16:10:21.798+08:00
 * Generated source version: 3.5.3
 *
 */
public final class ProjectPortType_ProjectPort_Client {

    private static final QName SERVICE_NAME = new QName("http://xmlns.oracle.com/Primavera/P6/WS/Project/V2", "ProjectService");

    private ProjectPortType_ProjectPort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ProjectService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        ProjectService ss = new ProjectService(wsdlURL, SERVICE_NAME);
        ProjectPortType port = ss.getProjectPort();

        {
        System.out.println("Invoking deleteProjects...");
        java.util.List<Integer> _deleteProjects_objectId = null;
        try {
            boolean _deleteProjects__return = port.deleteProjects(_deleteProjects_objectId);
            System.out.println("deleteProjects.result=" + _deleteProjects__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking publishProject...");
        int _publishProject_objectId = 0;
        try {
            boolean _publishProject__return = port.publishProject(_publishProject_objectId);
            System.out.println("publishProject.result=" + _publishProject__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking copyWBSFromTemplate...");
        int _copyWBSFromTemplate_objectId = 0;
        int _copyWBSFromTemplate_templateWbsObjectId = 0;
        javax.xml.ws.Holder<Integer> _copyWBSFromTemplate_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.copyWBSFromTemplate(_copyWBSFromTemplate_objectId, _copyWBSFromTemplate_templateWbsObjectId, _copyWBSFromTemplate_objectId1);

            System.out.println("copyWBSFromTemplate._copyWBSFromTemplate_objectId1=" + _copyWBSFromTemplate_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking isProjectLocked...");
        int _isProjectLocked_objectId = 0;
        boolean _isProjectLocked_includeCurrentSession = false;
        try {
            boolean _isProjectLocked__return = port.isProjectLocked(_isProjectLocked_objectId, _isProjectLocked_includeCurrentSession);
            System.out.println("isProjectLocked.result=" + _isProjectLocked__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking loadActivityCodesNewerThanBaseline...");
        int _loadActivityCodesNewerThanBaseline_objectId = 0;
        java.util.List<String> _loadActivityCodesNewerThanBaseline_fields = null;
        String _loadActivityCodesNewerThanBaseline_whereClause = "";
        String _loadActivityCodesNewerThanBaseline_orderBy = "";
        int _loadActivityCodesNewerThanBaseline_baselineObjectId = 0;
        try {
            java.util.List<String> _loadActivityCodesNewerThanBaseline__return = port.loadActivityCodesNewerThanBaseline(_loadActivityCodesNewerThanBaseline_objectId, _loadActivityCodesNewerThanBaseline_fields, _loadActivityCodesNewerThanBaseline_whereClause, _loadActivityCodesNewerThanBaseline_orderBy, _loadActivityCodesNewerThanBaseline_baselineObjectId);
            System.out.println("loadActivityCodesNewerThanBaseline.result=" + _loadActivityCodesNewerThanBaseline__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking convertProjectToBaseline...");
        int _convertProjectToBaseline_originalProjectObjectId = 0;
        int _convertProjectToBaseline_targetProjectObjectId = 0;
        try {
            int _convertProjectToBaseline__return = port.convertProjectToBaseline(_convertProjectToBaseline_originalProjectObjectId, _convertProjectToBaseline_targetProjectObjectId);
            System.out.println("convertProjectToBaseline.result=" + _convertProjectToBaseline__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking createProjectFromTemplate...");
        int _createProjectFromTemplate_objectId = 0;
        int _createProjectFromTemplate_epsObjectId = 0;
        Boolean _createProjectFromTemplate_copyRisks = null;
        Boolean _createProjectFromTemplate_copyIssuesThresholds = null;
        Boolean _createProjectFromTemplate_copyReports = null;
        Boolean _createProjectFromTemplate_copyProjectDocuments = null;
        Boolean _createProjectFromTemplate_copyFundingSources = null;
        Boolean _createProjectFromTemplate_copySummaryData = null;
        Boolean _createProjectFromTemplate_copyProjectNotes = null;
        Boolean _createProjectFromTemplate_copyWBSMilestones = null;
        Boolean _createProjectFromTemplate_copyActivities = null;
        Boolean _createProjectFromTemplate_copyHighLevelResourcePlanning = null;
        Boolean _createProjectFromTemplate_copyResourceAndRoleAssignments = null;
        Boolean _createProjectFromTemplate_copyRelationships = null;
        Boolean _createProjectFromTemplate_copyOnlyBetweenCopiedActivities = null;
        Boolean _createProjectFromTemplate_copyActivityExpenses = null;
        Boolean _createProjectFromTemplate_copyActivityCodes = null;
        Boolean _createProjectFromTemplate_copyActivityNotes = null;
        Boolean _createProjectFromTemplate_copyActivitySteps = null;
        Boolean _createProjectFromTemplate_copyPastPeriodActuals = null;
        javax.xml.ws.Holder<Integer> _createProjectFromTemplate_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.createProjectFromTemplate(_createProjectFromTemplate_objectId, _createProjectFromTemplate_epsObjectId, _createProjectFromTemplate_copyRisks, _createProjectFromTemplate_copyIssuesThresholds, _createProjectFromTemplate_copyReports, _createProjectFromTemplate_copyProjectDocuments, _createProjectFromTemplate_copyFundingSources, _createProjectFromTemplate_copySummaryData, _createProjectFromTemplate_copyProjectNotes, _createProjectFromTemplate_copyWBSMilestones, _createProjectFromTemplate_copyActivities, _createProjectFromTemplate_copyHighLevelResourcePlanning, _createProjectFromTemplate_copyResourceAndRoleAssignments, _createProjectFromTemplate_copyRelationships, _createProjectFromTemplate_copyOnlyBetweenCopiedActivities, _createProjectFromTemplate_copyActivityExpenses, _createProjectFromTemplate_copyActivityCodes, _createProjectFromTemplate_copyActivityNotes, _createProjectFromTemplate_copyActivitySteps, _createProjectFromTemplate_copyPastPeriodActuals, _createProjectFromTemplate_objectId1);

            System.out.println("createProjectFromTemplate._createProjectFromTemplate_objectId1=" + _createProjectFromTemplate_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking loadActivityUDFValuesNewerThanBaseline...");
        int _loadActivityUDFValuesNewerThanBaseline_objectId = 0;
        java.util.List<String> _loadActivityUDFValuesNewerThanBaseline_fields = null;
        String _loadActivityUDFValuesNewerThanBaseline_whereClause = "";
        String _loadActivityUDFValuesNewerThanBaseline_orderBy = "";
        int _loadActivityUDFValuesNewerThanBaseline_baselineObjectId = 0;
        try {
            java.util.List<String> _loadActivityUDFValuesNewerThanBaseline__return = port.loadActivityUDFValuesNewerThanBaseline(_loadActivityUDFValuesNewerThanBaseline_objectId, _loadActivityUDFValuesNewerThanBaseline_fields, _loadActivityUDFValuesNewerThanBaseline_whereClause, _loadActivityUDFValuesNewerThanBaseline_orderBy, _loadActivityUDFValuesNewerThanBaseline_baselineObjectId);
            System.out.println("loadActivityUDFValuesNewerThanBaseline.result=" + _loadActivityUDFValuesNewerThanBaseline__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking createCopyAsTemplate...");
        int _createCopyAsTemplate_objectId = 0;
        int _createCopyAsTemplate_epsObjectId = 0;
        Boolean _createCopyAsTemplate_copyRisks = null;
        Boolean _createCopyAsTemplate_copyIssuesThresholds = null;
        Boolean _createCopyAsTemplate_copyReports = null;
        Boolean _createCopyAsTemplate_copyProjectDocuments = null;
        Boolean _createCopyAsTemplate_copyFundingSources = null;
        Boolean _createCopyAsTemplate_copySummaryData = null;
        Boolean _createCopyAsTemplate_copyProjectNotes = null;
        Boolean _createCopyAsTemplate_copyActualToPlannedValues = null;
        Boolean _createCopyAsTemplate_copyWBSMilestones = null;
        Boolean _createCopyAsTemplate_copyActivities = null;
        Boolean _createCopyAsTemplate_copyHighLevelResourcePlanning = null;
        Boolean _createCopyAsTemplate_copyResourceAndRoleAssignments = null;
        Boolean _createCopyAsTemplate_copyRelationships = null;
        Boolean _createCopyAsTemplate_copyOnlyBetweenCopiedActivities = null;
        Boolean _createCopyAsTemplate_copyActivityExpenses = null;
        Boolean _createCopyAsTemplate_copyActivityCodes = null;
        Boolean _createCopyAsTemplate_copyActivityNotes = null;
        Boolean _createCopyAsTemplate_copyActivitySteps = null;
        Boolean _createCopyAsTemplate_copyPastPeriodActuals = null;
        javax.xml.ws.Holder<Integer> _createCopyAsTemplate_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.createCopyAsTemplate(_createCopyAsTemplate_objectId, _createCopyAsTemplate_epsObjectId, _createCopyAsTemplate_copyRisks, _createCopyAsTemplate_copyIssuesThresholds, _createCopyAsTemplate_copyReports, _createCopyAsTemplate_copyProjectDocuments, _createCopyAsTemplate_copyFundingSources, _createCopyAsTemplate_copySummaryData, _createCopyAsTemplate_copyProjectNotes, _createCopyAsTemplate_copyActualToPlannedValues, _createCopyAsTemplate_copyWBSMilestones, _createCopyAsTemplate_copyActivities, _createCopyAsTemplate_copyHighLevelResourcePlanning, _createCopyAsTemplate_copyResourceAndRoleAssignments, _createCopyAsTemplate_copyRelationships, _createCopyAsTemplate_copyOnlyBetweenCopiedActivities, _createCopyAsTemplate_copyActivityExpenses, _createCopyAsTemplate_copyActivityCodes, _createCopyAsTemplate_copyActivityNotes, _createCopyAsTemplate_copyActivitySteps, _createCopyAsTemplate_copyPastPeriodActuals, _createCopyAsTemplate_objectId1);

            System.out.println("createCopyAsTemplate._createCopyAsTemplate_objectId1=" + _createCopyAsTemplate_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking createProjects...");
        java.util.List<ccm.server.ws.p6.project.Project> _createProjects_project = null;
        try {
            java.util.List<Integer> _createProjects__return = port.createProjects(_createProjects_project);
            System.out.println("createProjects.result=" + _createProjects__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking readProjects...");
        java.util.List<ccm.server.ws.p6.project.ProjectFieldType> _readProjects_field = null;
        String _readProjects_filter = "";
        String _readProjects_orderBy = "";
        try {
            java.util.List<ccm.server.ws.p6.project.Project> _readProjects__return = port.readProjects(_readProjects_field, _readProjects_filter, _readProjects_orderBy);
            System.out.println("readProjects.result=" + _readProjects__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking getFieldLengthProject...");
        String _getFieldLengthProject_field = "";
        try {
            int _getFieldLengthProject__return = port.getFieldLengthProject(_getFieldLengthProject_field);
            System.out.println("getFieldLengthProject.result=" + _getFieldLengthProject__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking copyProjectAsReflection...");
        int _copyProjectAsReflection_objectId = 0;
        javax.xml.ws.Holder<Integer> _copyProjectAsReflection_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.copyProjectAsReflection(_copyProjectAsReflection_objectId, _copyProjectAsReflection_objectId1);

            System.out.println("copyProjectAsReflection._copyProjectAsReflection_objectId1=" + _copyProjectAsReflection_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking copyBaseline...");
        int _copyBaseline_objectId = 0;
        int _copyBaseline_baselineObjectId = 0;
        javax.xml.ws.Holder<Integer> _copyBaseline_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.copyBaseline(_copyBaseline_objectId, _copyBaseline_baselineObjectId, _copyBaseline_objectId1);

            System.out.println("copyBaseline._copyBaseline_objectId1=" + _copyBaseline_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking assignProjectAsBaseline...");
        int _assignProjectAsBaseline_originalProjectObjectId = 0;
        int _assignProjectAsBaseline_targetProjectObjectId = 0;
        try {
            int _assignProjectAsBaseline__return = port.assignProjectAsBaseline(_assignProjectAsBaseline_originalProjectObjectId, _assignProjectAsBaseline_targetProjectObjectId);
            System.out.println("assignProjectAsBaseline.result=" + _assignProjectAsBaseline__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking loadActivitiesNewerThanBaseline...");
        int _loadActivitiesNewerThanBaseline_objectId = 0;
        java.util.List<String> _loadActivitiesNewerThanBaseline_fields = null;
        String _loadActivitiesNewerThanBaseline_whereClause = "";
        String _loadActivitiesNewerThanBaseline_orderBy = "";
        int _loadActivitiesNewerThanBaseline_baselineObjectId = 0;
        try {
            java.util.List<String> _loadActivitiesNewerThanBaseline__return = port.loadActivitiesNewerThanBaseline(_loadActivitiesNewerThanBaseline_objectId, _loadActivitiesNewerThanBaseline_fields, _loadActivitiesNewerThanBaseline_whereClause, _loadActivitiesNewerThanBaseline_orderBy, _loadActivitiesNewerThanBaseline_baselineObjectId);
            System.out.println("loadActivitiesNewerThanBaseline.result=" + _loadActivitiesNewerThanBaseline__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking updateProjectPreferences...");
        int _updateProjectPreferences_objectId = 0;
        Boolean _updateProjectPreferences_enablePublication = null;
        Integer _updateProjectPreferences_publicationPriority = null;
        String _updateProjectPreferences_lastPublishedOn = "";
        String _updateProjectPreferences_publishLevel = "";
        String _updateProjectPreferences_deploymentNames = "";
        String _updateProjectPreferences_deleteDeployments = "";
        Boolean _updateProjectPreferences_unifierEnabledFlag = null;
        String _updateProjectPreferences_unifierProjectNumber = "";
        String _updateProjectPreferences_unifierProjectName = "";
        String _updateProjectPreferences_unifierScheduleSheetName = "";
        String _updateProjectPreferences_unifierDataMappingName = "";
        Boolean _updateProjectPreferences_unifierDeleteActivitiesFlag = null;
        Boolean _updateProjectPreferences_unifierCBSTasksOnlyFlag = null;
        String _updateProjectPreferences_projectScheduleType = "";
        Boolean _updateProjectPreferences_syncWbsHierarchyFlag = null;
        String _updateProjectPreferences_scheduleWBSHierarchyType = "";
        Integer _updateProjectPreferences_wbsHierarchyLevels = null;
        Boolean _updateProjectPreferences_enableSummarization = null;
        String _updateProjectPreferences_summaryLevel = "";
        Integer _updateProjectPreferences_summarizeToWBSLevel = null;
        String _updateProjectPreferences_lastSummarizedDate = "";
        String _updateProjectPreferences_historyLevel = "";
        String _updateProjectPreferences_historyInterval = "";
        try {
            boolean _updateProjectPreferences__return = port.updateProjectPreferences(_updateProjectPreferences_objectId, _updateProjectPreferences_enablePublication, _updateProjectPreferences_publicationPriority, _updateProjectPreferences_lastPublishedOn, _updateProjectPreferences_publishLevel, _updateProjectPreferences_deploymentNames, _updateProjectPreferences_deleteDeployments, _updateProjectPreferences_unifierEnabledFlag, _updateProjectPreferences_unifierProjectNumber, _updateProjectPreferences_unifierProjectName, _updateProjectPreferences_unifierScheduleSheetName, _updateProjectPreferences_unifierDataMappingName, _updateProjectPreferences_unifierDeleteActivitiesFlag, _updateProjectPreferences_unifierCBSTasksOnlyFlag, _updateProjectPreferences_projectScheduleType, _updateProjectPreferences_syncWbsHierarchyFlag, _updateProjectPreferences_scheduleWBSHierarchyType, _updateProjectPreferences_wbsHierarchyLevels, _updateProjectPreferences_enableSummarization, _updateProjectPreferences_summaryLevel, _updateProjectPreferences_summarizeToWBSLevel, _updateProjectPreferences_lastSummarizedDate, _updateProjectPreferences_historyLevel, _updateProjectPreferences_historyInterval);
            System.out.println("updateProjectPreferences.result=" + _updateProjectPreferences__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking loadAllResources...");
        int _loadAllResources_objectId = 0;
        java.util.List<String> _loadAllResources_fields = null;
        String _loadAllResources_whereClause = "";
        String _loadAllResources_orderBy = "";
        try {
            java.util.List<String> _loadAllResources__return = port.loadAllResources(_loadAllResources_objectId, _loadAllResources_fields, _loadAllResources_whereClause, _loadAllResources_orderBy);
            System.out.println("loadAllResources.result=" + _loadAllResources__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking copyProjectAsBaseline...");
        int _copyProjectAsBaseline_objectId = 0;
        javax.xml.ws.Holder<Integer> _copyProjectAsBaseline_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.copyProjectAsBaseline(_copyProjectAsBaseline_objectId, _copyProjectAsBaseline_objectId1);

            System.out.println("copyProjectAsBaseline._copyProjectAsBaseline_objectId1=" + _copyProjectAsBaseline_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking updateProjects...");
        java.util.List<ccm.server.ws.p6.project.Project> _updateProjects_project = null;
        try {
            boolean _updateProjects__return = port.updateProjects(_updateProjects_project);
            System.out.println("updateProjects.result=" + _updateProjects__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking copyProject...");
        int _copyProject_objectId = 0;
        int _copyProject_epsObjectId = 0;
        Boolean _copyProject_copyRisks = null;
        Boolean _copyProject_copyIssuesThresholds = null;
        Boolean _copyProject_copyReports = null;
        Boolean _copyProject_copyProjectDocuments = null;
        Boolean _copyProject_copyFundingSources = null;
        Boolean _copyProject_copySummaryData = null;
        Boolean _copyProject_copyProjectNotes = null;
        Boolean _copyProject_copyWBSMilestones = null;
        Boolean _copyProject_copyActivities = null;
        Boolean _copyProject_copyHighLevelResourcePlanning = null;
        Boolean _copyProject_copyResourceAndRoleAssignments = null;
        Boolean _copyProject_copyRelationships = null;
        Boolean _copyProject_copyOnlyBetweenCopiedActivities = null;
        Boolean _copyProject_copyActivityExpenses = null;
        Boolean _copyProject_copyActivityCodes = null;
        Boolean _copyProject_copyActivityNotes = null;
        Boolean _copyProject_copyActivitySteps = null;
        Boolean _copyProject_copyPastPeriodActuals = null;
        javax.xml.ws.Holder<Integer> _copyProject_objectId1 = new javax.xml.ws.Holder<Integer>();
        try {
            port.copyProject(_copyProject_objectId, _copyProject_epsObjectId, _copyProject_copyRisks, _copyProject_copyIssuesThresholds, _copyProject_copyReports, _copyProject_copyProjectDocuments, _copyProject_copyFundingSources, _copyProject_copySummaryData, _copyProject_copyProjectNotes, _copyProject_copyWBSMilestones, _copyProject_copyActivities, _copyProject_copyHighLevelResourcePlanning, _copyProject_copyResourceAndRoleAssignments, _copyProject_copyRelationships, _copyProject_copyOnlyBetweenCopiedActivities, _copyProject_copyActivityExpenses, _copyProject_copyActivityCodes, _copyProject_copyActivityNotes, _copyProject_copyActivitySteps, _copyProject_copyPastPeriodActuals, _copyProject_objectId1);

            System.out.println("copyProject._copyProject_objectId1=" + _copyProject_objectId1.value);
        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking calculateProjectScore...");
        int _calculateProjectScore_projectObjectId = 0;
        java.util.List<Integer> _calculateProjectScore_projectCodeTypeObjectId = null;
        try {
            int _calculateProjectScore__return = port.calculateProjectScore(_calculateProjectScore_projectObjectId, _calculateProjectScore_projectCodeTypeObjectId);
            System.out.println("calculateProjectScore.result=" + _calculateProjectScore__return);

        } catch (IntegrationFault e) {
            System.out.println("Expected exception: IntegrationFault has occurred.");
            System.out.println(e.toString());
        }

            }

        System.exit(0);
    }

}
